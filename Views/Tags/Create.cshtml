@model ManyToMany.Models.Tag

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Tag</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>



            <div class="form-group">
                <label>Select associated posts:</label><br />
                @foreach (var post in ViewData["Posts"] as List<ManyToMany.Models.Post>)
                {
                    <div>
                        <input type="checkbox" name="selectedPosts" value="@post.Id" />
                        <label>@post.Title</label>
                    </div>
                }
            </div>

            @if (((int)ViewData["CurrentPage"] <= (int)ViewData["TotalPages"]) || ((int)ViewData["CurrentPage"] > (int)ViewData["TotalPages"]))
            {
                <button type="submit" class="btn btn-primary">Create</button>
                <a asp-action="Create" asp-route-page="@((int)ViewData["NextPage"])" class="btn btn-link">Next</a>
            }

            @if ((int)ViewData["CurrentPage"] > 1)
            {
                <a asp-action="Create" asp-route-page="@((int)ViewData["PreviousPage"])" class="btn btn-link">Previous</a>
            }

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
